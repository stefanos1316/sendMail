#!/bin/sh
#
# A simple Shell script to facilitate the process of sending emails from a terminal
#
# Copyright 2021 Stefanos Georgiou
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Text fonts for Linux distros
bold=$(tput bold)
underline=$(tput smul)
default=$(tput sgr0)
greenlabel=$(tput setab 2)
redlabel=$(tput setab 1)
yellowlabel=$(tput setab 3)

help_info()
{
  # Printing the manual page
  echo 
  echo "${bold}NAME${default}"
  echo "	sendMail"
  echo
  echo "${bold}SYNOPSIS${default}"
  echo "	${bold}sendMail${default} [${underline}OPTION${default}]..."
  echo
  echo "${bold}DESCRIPTION${default}"
  echo "	Sends an email though the command-line for gmail. Rememver to first setup this service and then allow less secure apps from your gmail account."
  echo
  echo "	${bold}-a${default} ${underline}email's username${default}, ${bold}--account${default} ${underline}email's username${default}"
  echo
  echo "    provide the email address from which you will send your mails"
  echo
  echo "	${bold}-c, --configure${default}"
  echo
  echo "    when this flag is invoked, you have to provide your account (-a or --account) and password (-p or --password) command-line arguments to complete the setup"
  echo
  echo "	${bold}-d, --delete${default}"
  echo
  echo "    the senders emails with be deleted from the .sendMail dir (found under the home directory)"
  echo
  echo "	${bold}-f${default} ${underline}file path with mail's body${default}, ${bold}--file${default} ${underline}file path with mail's body${default}"
  echo
  echo "		provide a file path with the mail's body"
  echo
  echo "	${bold}-h, --help${default}"
  echo
  echo "		display this help list and exit"
  echo
  echo "	${bold}-m${default} ${underline}mail's body${default}, ${bold}--message${default} ${underline}mail's body${default}"
  echo
  echo "		provide the body of the mail"
  echo
  echo "	${bold}-p${default} ${underline}password of email account${default}, ${bold}--password${default} ${underline}password of email account${default}"
  echo
  echo "		provide the body of the mail"
  echo
  echo "	${bold}-s${default} ${underline}title of mail${default}, ${bold}--subject${default} ${underline}title of mail${default}"
  echo
  echo "		provide the title/subject of the mail"
  echo
  echo "	${bold}-t${default} ${underline}receiver's address${default}, ${bold}--to${default} ${underline}receive's address${default}"
  echo
  echo "		provide the email address of the receiver"
  echo
  echo "	${bold}-x, --send${default}"
  echo
  echo "		this option is needed in order to send mail"
  echo
  echo "${bold}AUTHOR${default}"
  echo "	Written by Stefanos I. Georgiou"
  echo 
  echo "${bold}REPORTING BUGS${default}"
  echo "	Report sendMail translation bugs to <https://github.com/stefanos1316/sendMail/issues>"
  echo
  echo "${bold}COPYRIGHT${default}"
  echo "	Copyright © 2021 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."
  echo "	This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law."
  echo
  echo "\e[38;5;208mThank you for using this product 🙏${default}"
  exit
}

# Log with a timestamp
log()
{
  # Output is redirected to the log file if needed at the script's lop level
  date +'%F %T ' | tr -d \\n 1>&2
  echo "$@" 1>&2
}

# Set up mail account configurations
# $1 stands for the sender's email account
# $2 stands for the password of the corresponding email account
reConfigureSendMail()
{
  rm ~/.sendMail
  log "Configurations reset"
  exit
}

# Check if configurs are already there
checkIfAlreadyConfigured()
{
  if [ -f ~/.sendMail/userinfo ]; then
      rm ~/.sendMail/userinfo || log "${yellowlabel}[INFO]${default} Not found"
    fi

  return 0
}

# Send email
# $3 the receiver of this email
sendEmail()
{
  if ! curl --url 'smtps://smtp.gmail.com:465' \
    --silent \
    --ssl-reqd \
    --mail-from "$1" \
    --mail-rcpt "$3" \
    --user "$1:$2" \
    -T "$4"; then
    return 1
  fi

  return 0
}

# Create a hidden directory
if [ ! -d ~/.sendMail ]; then
  mkdir ~/.sendMail
fi

# If there is no : after a letter it means the specific letter has no argument, if it has :: it means the particular has optional, and a : has required argument.
OPTIONS=$(getopt -o a:cdf:hm:p:rs:t:x --long account:,configure,delete,file:,help,message:,password:,reconfigure,subject:,to:,send -n 'sendMail' -- "$@")
eval set -- "$OPTIONS"
while true; do
  case "$1" in
    -c|--configure) checkIfAlreadyConfigured; shift;;
    -a|--account) echo "username:$2" >> ~/.sendMail/userinfo; shift 2;;
    -p|--password) echo "password:$2" >> ~/.sendMail/userinfo; shift 2;;
    -d|--delete) DELETE=true; shift;;
    #-f|--file) FILE="$2"; shift;;
    -h|--help) help_info; shift;;
    -m|--message) MESSAGE="$2"; shift 2;;
    -s|--subject) SUBJECT="$2"; shift 2;;
    -t|--to) TO="$2"; shift 2;;
    -x|--send) SEND=true; shift;;
    --) shift; break;;
    *) >&2 log "${redlabel}[ERROR]${default} Wrong command line argument, please try again."; exit 1;;
  esac
done

if [ "$SEND" ]; then
  
  # Check if user was configured before sending email
  if [ ! -f ~/.sendMail/userinfo ]; then
    log "${redlabel}[ERROR]${default} Seems like a user was not configured!"
    log "${yellowlabel}[INFO]${default} Please run sendMail with -c file to configure"
    log "${yellowlabel}[INFO]${default} Additionally, you have to provide -a and -p arguments for account name and password, repsectively"
    exit
  fi

  # Get user's info
  FROM="$(grep username ~/.sendMail/userinfo | cut -d':' -f2)"
  PASS="$(grep password ~/.sendMail/userinfo | cut -d':' -f2)"
  
  # Generate message file
  MESSAGE_FILE_PATH=~/.sendMail/"$(date '+%Y-%m-%d_%H-%M-%S')"_message
  touch "$MESSAGE_FILE_PATH"
  # Generete message file
  printf "From: %s\nTo: %s\nSubject: %s\n\n%s" "$FROM" "$TO" "$SUBJECT" "$MESSAGE" > "$MESSAGE_FILE_PATH"
  
  # Send mail
  if ! sendEmail "$FROM" "$PASS" "$TO" "$MESSAGE_FILE_PATH"; then
    log "${redlabel}[ERROR]${default} Something went wrong and the mail was not send"
    log "${yellowlabel}[INFO]${default} Please contact with the authors of this tool"
    exit 1
  fi

  log "${greenlabel}[SUCCESS]${default} Mail was delivered to $TO successfully!"

  # Remove hidden files
  if [ "$DELETE" ]; then
    rm "$MESSAGE_FILE_PATH"
  fi
fi
